static void smear_stage_1(su3_two_index *out, double const coeff, gauge_field_t orig)
{
  su3 ALIGN tmp;
  su3 ALIGN staples;

#pragma omp for private(tmp, staples)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int comp = 0; comp < 12; ++comp)
    {
      int const mu    = hi2[comp].mu;      
      int const sigma = hi2[comp].sigma;

      int const xpm = g_iup[x][mu];
      int const xps = g_iup[x][sigma];
      int const xms = g_idn[x][sigma];
      int const xpmms = g_idn[xpm][sigma];

      _su3_times_su3d(tmp, orig[xps][mu], orig[xpm][sigma]);
      _su3_times_su3(staples, orig[x][sigma], tmp);
      _su3_times_su3(tmp, orig[xms][mu], orig[xpmms][sigma]);
      _su3d_times_su3_acc(staples, orig[xms][sigma], tmp);
      
      fatten_links(&out[x][comp], coeff, &staples, &orig[x][mu]);
    }
  
#pragma omp single
  generic_exchange(&out, sizeof(su3_two_index));
}
